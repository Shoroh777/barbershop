/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */button,hr,input{overflow:visible}audio,canvas,progress,video{display:inline-block}progress,sub,sup{vertical-align:baseline}.feature .feature__list .feature__item:focus,.reviews__list .reviews__item:focus,button:active,button:focus{outline:0}[type=checkbox],[type=radio],legend{box-sizing:border-box;padding:0}button,legend{color:inherit}a,button{background-color:transparent}@font-face{font-family:'PT Sans Narrow';font-style:normal;font-weight:400;font-display:swap;src:local('PT Sans Narrow'),local('PTSans-Narrow'),url(https://fonts.gstatic.com/s/ptsansnarrow/v11/BngRUXNadjH0qYEzV7ab-oWlsbCCwRg.ttf) format('truetype')}@font-face{font-family:'PT Sans Narrow';font-style:normal;font-weight:700;font-display:swap;src:local('PT Sans Narrow Bold'),local('PTSans-NarrowBold'),url(https://fonts.gstatic.com/s/ptsansnarrow/v11/BngSUXNadjH0qYEzV7ab-oWlsbg95AiBW_g.ttf) format('truetype')}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{display:table;max-width:100%;white-space:normal}textarea{overflow:auto}summary{display:list-item}[hidden],template{display:none}.visually-hidden{position:absolute!important;visibility:hidden!important;pointer-events:none!important;clip:rect(0 0 0 0)!important;-webkit-clip-path:inset(100%)!important;clip-path:inset(100%)!important;width:1px!important;height:1px!important;margin:-1px!important;padding:0!important;border:0!important;text-indent:-9999px!important;white-space:nowrap!important;overflow:hidden!important;-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}a,a:active,a:hover{text-decoration:none;color:#000}li{list-style-type:none}ul{margin-left:0;padding-left:0}button::-moz-focus-inner{border:0}button{padding:0;border:none;font:inherit;cursor:pointer}body{font-family:'PT Sans Narrow',Arial,sans-serif}.header{width:100%;background-color:#242424;display:flex;justify-content:center}.header .header__container{width:100%;display:flex;flex-direction:column}.header__nav{justify-self:flex-start;position:relative;background-color:#826550}.header__nav .header__nav-menu-mobile{display:none}@media (max-width:767px){.header__nav .header__nav-menu-mobile{max-height:50px;padding:15px 17px;right:0;display:block;position:absolute;background-color:#6a4d38}.header__nav .header__list .header__item{display:none}}.feature,.price .price__ps{background-color:#242424}.header__nav .header__list{margin:0}.header__nav .header__list .header__item{min-height:50px}.header__nav .header__list .header__item .header__item-link{font-size:18px;color:#fff;font-weight:700;text-transform:uppercase;text-align:center}@media (max-width:767px){.header__nav .header__list .header__item--current{display:flex;align-items:center;justify-content:center}.header__nav .header__user-nav{display:none;margin:0}.logo .logo__link .logo__barbershop-pic .logo__barbershop-img{width:70.625vw}}.logo{padding:29px 0 26px;display:flex;justify-content:center}.feature .feature__list{max-width:100vw;padding-bottom:13px;margin:25px 0}.feature .feature-indicator .feature-indicator__img,.reviews__list .news-indicator .news-indicator__img{max-height:15px;max-width:15px;background-color:transparent;transform:rotate(-45deg);box-sizing:border-box}.feature .feature__list .feature__item{display:flex;flex-direction:column;justify-content:center;align-items:center}.feature .feature__list .feature__item .feature__img{text-align:center}.feature .feature__list .feature__item .feature__headline{margin:34px 0 20px;font-size:30px;color:#f7f4f1;font-weight:700;line-height:1;text-align:center}.feature .feature__list .feature__item .feature__text{width:72vw;margin:0;font-size:20px;color:#f7f4f1;line-height:1.35;text-align:center}.feature .feature-indicator{width:25vw;margin:25px auto 0;display:flex;justify-content:space-between;align-items:baseline}.news,.price,.price .price__top{flex-direction:column}.feature .feature-indicator .feature-indicator__img{width:3.128vw;height:3.128vw;border:2px solid #959595;transform-origin:0 100%}.feature .feature-indicator li .slick-active{width:3.128vw;height:3.128vw;background-color:#fff}.feature .feature-indicator .slick-active .feature-indicator__img{background-color:#fff;border:1px solid #959595}.feature-after,.news{background-color:#f8f5f2}.feature-after,.news-after{border-left:50vw solid transparent;border-right:50vw solid transparent}.news,.news .news__list .news__item:first-child{border-bottom:1px solid #e5ddd5}.feature-after{width:0;height:0;border-top:35px solid #242424}.news{display:flex;padding:35px 20px 28px}.news .news__headline{font-size:30px;color:#000;font-weight:700;text-transform:uppercase;line-height:1;text-align:center;margin:0}.news .news__button{font-size:18px;color:#000;font-weight:700;text-transform:uppercase;line-height:1.333;text-align:center;order:4;padding:17px;border:1px solid #e5ddd5}.news .news__list{margin:10px 0 0}.news .news__list .news__item{margin-top:25px;padding-bottom:20px}.news .news__list .news__item:last-child{display:none}.news .news__list .news__item .news__link{display:flex;justify-content:space-around}.news .news__list .news__item .news__link .news__date{background-color:#000;height:50px;width:50px;margin-top:10px}.news .news__list .news__item .news__link .news__date .news__date-value{font-size:30px;color:#fff;font-weight:700;line-height:1;text-align:center;margin:5px 0 0}.news .news__list .news__item .news__link .news__date .news__month{font-size:16px;color:#fff;text-align:center;margin:-5px}.news .news__list .news__item .news__link .news__date .news__link-arrow{width:0;height:0;border-left:25px solid transparent;border-right:25px solid transparent;border-top:10px solid #000;margin-top:6.8px}.news .news__list .news__item .news__link .news__text{width:65.625vw;font-size:18px;color:#000;line-height:1.5;margin:0}.price{display:flex;justify-content:center}.price .price__top{width:76.5625vw;display:flex;justify-content:center;align-self:center}.price .price__top .price__headline{margin:30px 0;width:70vw;font-size:30px;color:#000;font-weight:700;text-transform:uppercase;line-height:1;text-align:center}.price .price__ps,.price .price__top .price__text{font-size:20px;line-height:1.35;text-align:center}.price .price__top .price__text{margin:0 0 25px;color:#000}.price .price__ps{padding:10px 0;margin:0;color:rgba(255,255,255,.302)}.price__list{display:flex;flex-direction:column;margin:0}.price__list .price__element{height:78px;padding:0 20px;display:flex;justify-content:space-between;align-items:center}.price__list .price__element:nth-child(1){background-color:#404040}.price__list .price__element:nth-child(2){background-color:#4e4e4e}.price__list .price__element:nth-child(3){background-color:#353535}.price__list .price__element:nth-child(4){background-color:#404040}.price__list .price__element .price__value{font-size:40px;color:#fff;font-weight:700;line-height:.45}.price__list .price__element .price__description{width:34.375vw;font-size:18px;color:#f7f4f1;line-height:1;text-align:right}.reviews{box-sizing:border-box;background-color:#f8f5f2;padding-bottom:10px}.reviews .reviews__headline{font-size:30px;color:#000;font-weight:700;text-transform:uppercase;line-height:1;text-align:center}.reviews .reviews__button,.reviews .reviews__comment .reviews__control-left,.reviews .reviews__comment .reviews__control-right{display:none}.news-after{background-color:#292929;width:0;height:0;border-top:35px solid #f8f5f2}.reviews__list{box-sizing:border-box;max-width:100vw;padding:0 20px}.reviews__list .reviews__item{display:flex!important;justify-content:space-around}.reviews__list .reviews__item .reviews__pic{margin-top:10px}.reviews__list .reviews__item .reviews__person{width:65.625vw}.reviews__list .reviews__item .reviews__person .reviews__name{font-size:24px;color:#000;font-weight:700;line-height:1.125;text-align:left;margin:0}.reviews__list .reviews__item .reviews__person .reviews__text{font-size:18px;color:#000;line-height:1.5;text-align:left;margin:10px 0 0}.reviews__list .news-indicator{width:25vw;margin:30px auto 0;display:flex!important;justify-content:space-between;align-items:baseline}.reviews__list .news-indicator .news-indicator__img{width:3.128vw;height:3.128vw;border:2px solid #959595;transform-origin:0 100%}.reviews__list .news-indicator li .slick-active{width:3.128vw;height:3.128vw;background-color:#fff}.reviews__list .news-indicator .slick-active .news-indicator__img{background-color:#353535;border:1px solid #959595}.index__container{width:100%;display:flex;justify-content:center}.index__container .index-main__container{display:flex;flex-direction:column;justify-content:center}.footer{box-sizing:border-box;background-color:#292929}.social .social__headline{display:none}.social .social__list{display:flex;justify-content:space-between}.social .social__list .social__item{border:1px solid #3f3f3f;width:33.3333333vw;height:100px}.social .social__list .social__item .social__link{display:flex;align-items:center;justify-content:center;height:100%}.social .social__list .social__item .social__link .social__img{margin:0}.design-by-academy{display:flex;flex-direction:column;padding:20px}.design-by-academy .design-by-academy__headline{font-size:18px;color:#fff;line-height:1.5;text-align:center;font-weight:400}.address .address__headline,.address .address__text .address__number,.design-by-academy .design-by-academy__link{font-size:18px;color:#fff;font-weight:700;text-align:center}.design-by-academy .design-by-academy__link{align-self:flex-start;text-transform:uppercase;line-height:1.333;padding:17px;width:100%;border:1px solid #3e3e3e;box-sizing:border-box}.address{padding:35px 20px 0}.address .address__headline{line-height:1.5;margin:0}.address .address__text{display:flex;flex-direction:column;align-items:center}.address .address__text .address__text-line{width:62.5vw;font-size:18px;color:#fff;line-height:1.5;text-align:center}.address .address__text .address__tel{display:none}.address .address__text .address__number{margin:20px 0;box-sizing:border-box;align-self:flex-start;text-transform:uppercase;line-height:1.333;padding:17px;width:100%;border:1px solid #3e3e3e}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
